/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'guofeng.qin' at '17-2-17 上午9:32' with Gradle 2.12
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */
version = '0.0.1'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'

compileJava.options.encoding = 'UTF-8'

//compileOptions {
//    sourceCompatibility JavaVersion.VERSION_1_8
//    targetCompatibility JavaVersion.VERSION_1_8
//}

applicationDefaultJvmArgs = ["-Xmx512m"]

startScripts << {
    def windowsScriptFile = file getWindowsScript()
    def unixScriptFile = file getUnixScript()
    windowsScriptFile.text = windowsScriptFile.text.replaceFirst('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%\\\\lib\\\\*')
    unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=.:$APP_HOME')
}

buildscript {
    apply plugin: 'java'
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
    }
}

jar {
    baseName = "package_web_client"

    manifest {
        attributes(
                "Implementation-Version": version,
                "Implementation-Title": "U8X.PackageServer"
        )
    }
}

mainClassName = 'com.u8x.PackageServerApp'

task release(dependsOn: [distZip]) << {
//    copy {
//        from "build/distributions"
//        into "../release"
//    }
    def zipFile = file('build/distributions/PackageServer-'+version+".zip")
    def outputDir = "../release"
    copy {
        from zipTree(zipFile)
        into outputDir
    }
    copy{
        from outputDir + "/PackageServer-"+version
        into outputDir + "/package.dev"
    }
    delete(outputDir + "/PackageServer-"+version)
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    //compile('org.springframework.boot:spring-boot-starter-mail')
    compile "org.xerial:sqlite-jdbc:3.21.0.1"
    compile fileTree(dir: 'lib', include:'*.jar')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}